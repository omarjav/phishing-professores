generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  userId    String   @id @default(uuid())
  username  String   @db.VarChar(100)
  password  String   @db.VarChar(250)
  createdAt DateTime @default(now())
}

model Target {
  targetId   String   @id @default(uuid())
  username   String   @db.VarChar(150)
  email      String   @db.VarChar(254)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  categoryId String

  category TestCategory? @relation(fields: [categoryId], references: [categoryId])

  accessLog AccessLog[]
}

model AccessLog {
  logId      String   @id @default(uuid())
  ip         String   @db.VarChar(100)
  device     String   @db.VarChar(20)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  targetId   String?
  hash       String?
  categoryId String

  testCategory   TestCategory?   @relation(fields: [categoryId], references: [categoryId])
  target         Target?         @relation(fields: [targetId], references: [targetId])
  expectedTarget ExpectedTarget? @relation(fields: [hash], references: [hash])
}

model ExpectedTarget {
  hash       String   @id @db.VarChar(20)
  email      String   @db.VarChar(254)
  name       String   @db.VarChar(150)
  createdAt  DateTime @default(now())
  categoryId String

  category TestCategory? @relation(fields: [categoryId], references: [categoryId])

  accessLog AccessLog[]
}

model TestCategory {
  categoryId String   @id @default(uuid())
  name       String   @db.VarChar(100)
  createdAt  DateTime @default(now())
  active     Boolean  @default(true)

  target         Target[]
  expectedTarget ExpectedTarget[]
  accessLog      AccessLog[]
}
